[
	/*************
	 * =override default
	 *************/
	{ "keys": ["alt+space"], "command": "auto_complete" },
	{ "keys": ["alt+space"], "command": "replace_completion_with_auto_complete", "context":
		[
			{ "key": "last_command", "operator": "equal", "operand": "insert_best_completion" },
			{ "key": "setting.tab_completion", "operator": "equal", "operand": true }
		]
	},
	/*************
	 * =customized tab
	 *************/
	{ "keys": ["tab"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
	    [
	        { "key": "selection_empty", "operator": "equal", "operand": true },
	        { "key": "preceding_text", "operator": "not_regex_match", "operand": "[[:space:]]*", "match_all": true },
	        { "key": "following_text", "operator": "regex_contains", "operand": "^[\"'\\)\\}\\]\\>]", "match_all": true },
	        { "key": "auto_complete_visible", "operator": "equal", "operand": false },
	        { "key": "has_next_field", "operator": "equal", "operand": false }
	    ]
	},
	{ "keys": ["tab"], "command": "move", "args": {"by": "words", "forward": true}, "context":
	    [
	        { "key": "selection_empty", "operator": "equal", "operand": true},
	        { "key": "preceding_text", "operator": "not_regex_match", "operand": "[[:space:]]*", "match_all": true },
	        { "key": "following_text", "operator": "regex_contains", "operand": "^[.,:;]", "match_all": true },
	        { "key": "auto_complete_visible", "operator": "equal", "operand": false },
	        { "key": "has_next_field", "operator": "equal", "operand": false }
	    ]
	},
	{ "keys": ["tab"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
	    [
	        { "key": "selection_empty", "operator": "equal", "operand": true},
	        { "key": "selector", "operator": "equal", "operand": "text.tex.latex", "match_all": true },
	        { "key": "preceding_text", "operator": "not_regex_match", "operand": "[[:space:]]*", "match_all": true },
	        { "key": "following_text", "operator": "regex_contains", "operand": "^[$]", "match_all": true },
	        { "key": "auto_complete_visible", "operator": "equal", "operand": false },
	        { "key": "has_next_field", "operator": "equal", "operand": false }
	    ]
	},
	/*************
	 * =plug-in hex to rgba
	 *************/
	{ "keys": ["shift+super+r"], "command": "hex_to_rgba" },
	/*************
	 * =plug-in terminal
	 *************/
	{ "keys": ["ctrl+super+t"], "command": "open_terminal"},
	/*************
	 * =plug-in reg replace
	 *************/
	{ "keys": ["alt+x"],
		"command": "reg_replace",
		"args": {
			"replacements": [
				"fuckingformat",
				"toomanynewlines"
			]
		}
	},
	{ "keys": ["alt+c"],
		"command": "reg_replace",
		"args": {
			"replacements": [
				"common_space",
				"semicolon_space",
				"opening_bracket_space",
				"closing_bracket_space",
				"logic",
				"equal",
				"bettercomment"
			]
		},
		"context": [
			{ "key": "setting.is_widget", "operator": "equal", "operand": false }
		]
	},
	/*************
	 * =plug-in advanced new file
	 *************/
	{ "keys": ["super+n"], "command": "advanced_new_file"},
	{ "keys": ["shift+super+n"], "command": "advanced_new_file", "args": {"is_python": true}},
	/*************
	 * =plug-in fuzzynav
	 *************/
    { "keys": ["ctrl+o"], "command": "fuzzy_start_from_file" },
    { "keys": ["ctrl+shift+o"], "command": "fuzzy_bookmarks_load" },
	/*************
	 * =jumping to blank lines
	 *************/
	{ "keys": ["alt+up"], "command": "move", "args": {"by": "stops", "empty_line": true, "forward": false} },
	{ "keys": ["alt+down"], "command": "move", "args": {"by": "stops", "empty_line": true, "forward": true} },
	{ "keys": ["alt+k"], "command": "move", "args": {"by": "stops", "empty_line": true, "forward": false},
	  "context":
	  [
	    { "key": "setting.command_mode", "operand": true },
	    { "key": "setting.is_widget", "operand": false }
	  ]
	},
	{ "keys": ["alt+j"], "command": "move", "args": {"by": "stops", "empty_line": true, "forward": true},
	  "context":
	  [
	    { "key": "setting.command_mode", "operand": true },
	    { "key": "setting.is_widget", "operand": false }
	  ]
	},
	/*************
	 * =customized hotkey for search bar
	 *************/
	{ "keys": ["shift+alt+r"], "command": "toggle_reverse", "context":
		[
			{ "key": "setting.is_widget", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["shift+alt+i"], "command": "toggle_in_selection", "context":
		[
			{ "key": "setting.is_widget", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["shift+alt+w"], "command": "toggle_wrap", "context":
		[
			{ "key": "setting.is_widget", "operator": "equal", "operand": true }
		]
	},
    /*************
     * =customized general purpose hotkey
     *************/
	{ "keys": ["j", "j"], "command": "exit_insert_mode",
	  "context":
	  [
	    { "key": "setting.command_mode", "operand": false },
	    { "key": "setting.is_widget", "operand": false }
	  ]
	},
	{ "keys": ["v", "v"], "command": "run_macro_file",
		"args": {"file": "Packages/Default/Add Line.sublime-macro"},
		"context":
		[
		    { "key": "setting.command_mode", "operand": false },
		    { "key": "setting.is_widget", "operand": false }
		]
	},
	{ "keys": ["`"], "command": "hide_auto_complete", "context":
		[
			{ "key": "auto_complete_visible", "operator": "equal", "operand": true }
		]
	},
	{ "keys": ["s"], "command": "set_action_motion", "args": {
        "action": "enter_insert_mode",
        "action_args": {"insert_command": "right_delete"},
        "motion": "expand_selection" },
        "context": [{"key": "setting.command_mode"}]
	},
	{ "keys": ["super+j"], "command": "expand_selection", "args": {"to": "indentation"} },
	{ "keys": ["ctrl+k", "ctrl+f"],
		"command": "open_dir",
		"args": {"dir": "$file_path", "file": "$file_name"}
	},
    { "keys": ["super+o"], "command": "open_in_browser" }
]