{
	"replacements": {
		"common_space": {
			"find": ",(?!\\s)",
			"replace": ", ",
			"greedy": true,
			"case": false,
			"scope_filter": ["source", "-comment", "-!string"]
		},
		"semicolon_space": {
			"find": ";(?!$)(?!\\s)",
			"replace": "; ",
			"greedy": true,
			"case": false,
			"scope_filter": ["source", "-comment", "-!string"]
		},
		"opening_bracket_space": {
			"find": "\\((?!\\s|\\))",
			"replace": "( ",
			"greedy": true,
			"case": false,
			"scope_filter": ["source", "-comment", "-!string"]
		},
		"closing_bracket_space": {
			"find": "(?<!\\s|\\()\\)",
			"replace": " )",
			"greedy": true,
			"case": false,
			"scope_filter": ["source", "-comment", "-!string"]
		},
		"logic": {
			"find": "(\\S+)(!=|==|\\&\\&|\\|\\||<=|>=)(\\S+)",
			"replace": "\\1 \\2 \\3",
			"greedy": true,
			"case": false,
			"scope_filter": ["source", "-comment", "-!string"]
		},
		"equal": {
			"find": "(\\S+)((?<!\\+|\\*|\\/|\\-|\\^)=(?!=)|\\+=|\\-=|\\*=|\\/=|\\^=)(\\S+)",
			"replace": "\\1 \\2 \\3",
			"greedy": true,
			"case": false,
			"scope_filter": ["source", "-comment", "-!string"]
		},
		"fuckingformat": {
			"find": "\n\\s*\\{",
			"replace": "{",
			"greedy": true,
			"case": false,
			"scope_filter": ["source", "-comment", "-!string"]
		},
		"toomanynewlines": {
			"find": "^(\\w+)( \\*)?\n",
			"replace": "\\1\\2 ",
			"greedy": true,
			"case": false,
			"scope_filter": ["source", "-comment", "-!string"]
		},
		"bettercomment": {
			"find": "//(?=\\S)",
			"replace": "// ",
			"greedy": true,
			"case": false,
			"scope_filter": ["comment"]
		},
		"compress_space": {
			"find": "\t|\n",
			"replace": "",
			"greedy": true,
			"case": false,
			"scope_filter": 
			[
				"source.c, source.js, source.java, source.css",
				"-comment", "-!string"
			]
		},
		"compress_comments": {
			"find": ".*?\n",
			"replace": "",
			"greedy": true,
			"case": false,
			"scope_filter": ["comment"]
		},
		"compress_opening_brackets": {
			"find": "(\\[|\\(|\\{)\\s+",
			"replace": "\\1",
			"greedy": true,
			"case": false,
			"scope_filter": 
			[
				"source.c, source.js, source.java, source.css",
				"-comment", "-!string"
			]
		},
		"compress_closing_brackets": {
			"find": "\\s+(\\)|\\}|\\])",
			"replace": "\\1",
			"greedy": true,
			"case": false,
			"scope_filter": 
			[
				"source.c, source.js, source.java, source.css",
				"-comment", "-!string"
			]
		},
		"compress_special": {
			"find": "\\s*(:|;|,)\\s*",
			"replace": "\\1",
			"greedy": true,
			"case": false,
			"scope_filter": 
			[
				"source.c, source.js, source.java, source.css",
				"-comment", "-!string"
			]
		}
	}
}
